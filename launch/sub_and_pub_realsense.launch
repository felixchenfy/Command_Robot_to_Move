<launch>

    <!-- (Choise 1) Input data from RealSense camera -->
    <!-- <param name="topic_color_image" value="/camera/color/image_raw" /> 
    <param name="topic_camera_info" value="/camera/color/camera_info" /> 
    <param name="topic_depth_image" value="/camera/aligned_depth_to_color/image_raw" /> 
    <param name="filename_camera_info" value="$(find mask_objects_from_rgbd)/config/cam_params_realsense.json" /> -->

    <!-- (Choise 2) Input data from AsusXtion camera -->
    <!-- <param name="topic_color_image" value="/camera/rgb/image_rect_color" /> 
    <param name="topic_camera_info" value="/camera/rgb/camera_info" /> 
    <param name="topic_depth_image" value="/camera/depth_registered/hw_registered/image_rect" /> 
    <param name="filename_camera_info" value="$(find mask_objects_from_rgbd)/config/cam_params_xtion.json" />
    <param name="topic_xtion_point_cloud" value="/camera/depth_registered/points" />  -->
    
    
    <!-- (Choise 3) Input data from file -->
    <param name="topic_color_image" value="/camera/color/image_raw" /> 
    <param name="topic_camera_info" value="/camera/color/camera_info" /> 
    <param name="topic_depth_image" value="/camera/aligned_depth_to_color/image_raw" /> 
    <param name="filename_camera_info" value="$(find mask_objects_from_rgbd)/config/cam_params_realsense.json" />
    <node name="n0_fake_rgbd_image_publisher" pkg="mask_objects_from_rgbd" type="n0_fake_rgbd_image_publisher.py"  output="screen"/>

    <!-- Files and communication settings -->
    <param name="folder_data" value="$(find mask_objects_from_rgbd)/data/" /> 
    <param name="topic_point_cloud" value="/camera/depth/color/points" /> 
    <param name="topic_point_cloud_clustering_res" value="/my_cloud_clustering_res" /> 
    <param name="topic_point_cloud_objects" value="/my_cloud_objects" /> 
    <param name="topic_num_objects" value="/my_num_objects" /> 
    <param name="topic_objects_on_image" value="/my_objects_on_image" /> 


    <!-- Main nodes -->
    <node name="n1_main_add_label_to_image" pkg="mask_objects_from_rgbd" type="n1_main_add_label_to_image.py"  output="screen">
    </node>

    <node name="node_detect_object_from_cloud" pkg="mask_objects_from_rgbd"  type="node_detect_object_from_cloud" output = "screen">  
        <!-- segment plane -->
        <param name="num_planes_" type="int" value="1" />     
        <param name="plane_distance_threshold_" type="double" value="0.01" />     
        <param name="plane_max_iterations_" type="int" value="100" />     

        <!-- divide cloud into clusters -->
        <param name="flag_do_clustering_" type="bool" value="true" />     
        <param name="cluster_tolerance_" type="double" value="0.1" />     
        <param name="min_cluster_size_" type="int" value="50" />     
        <param name="max_cluster_size_" type="int" value="10000" />   
        <param name="max_num_objects_" type="int" value="3" />   
         
    </node>


    <!-- rviz -->
    <node type="rviz" name="rviz_1" pkg="rviz" args="-d $(find mask_objects_from_rgbd)/config/rviz_rgb_and_color_image.rviz" respawn="true"/>
    <node type="rviz" name="rviz_2" pkg="rviz" args="-d $(find mask_objects_from_rgbd)/config/rviz_cloud_src.rviz" respawn="true"/>
    <node type="rviz" name="rviz_3" pkg="rviz" args="-d $(find mask_objects_from_rgbd)/config/rviz_cloud_res.rviz" respawn="true"/>

</launch>